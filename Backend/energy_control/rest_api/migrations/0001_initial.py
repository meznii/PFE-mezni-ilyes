# Generated by Django 3.2.3 on 2021-05-30 15:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='alarm_logs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('device_id', models.PositiveIntegerField()),
                ('log', models.CharField(max_length=500)),
                ('log_level', models.CharField(max_length=20)),
                ('value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.PositiveIntegerField()),
                ('alarm_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Invoce',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.PositiveIntegerField()),
                ('total_consumption', models.FloatField()),
                ('total_pricing', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_device', models.PositiveIntegerField()),
                ('date', models.DateTimeField(auto_now=True)),
                ('en_L1', models.FloatField()),
                ('cons_en_L1', models.FloatField()),
                ('en_L2', models.FloatField()),
                ('cons_en_L2', models.FloatField()),
                ('en_L3', models.FloatField()),
                ('cons_en_L3', models.FloatField()),
                ('min_cosfi_L1', models.FloatField()),
                ('max_cosfi_L1', models.FloatField()),
                ('moy_cosfi_L1', models.FloatField()),
                ('min_cosfi_L2', models.FloatField()),
                ('max_cosfi_L2', models.FloatField()),
                ('moy_cosfi_L2', models.FloatField()),
                ('min_cosfi_L3', models.FloatField()),
                ('max_cosfi_L3', models.FloatField()),
                ('moy_cosfi_L3', models.FloatField()),
                ('cons_glbal', models.FloatField()),
            ],
            options={
                'db_table': 'Measurement',
            },
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('device_id', models.PositiveIntegerField()),
                ('prediction', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Statistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.PositiveIntegerField()),
                ('year', models.FloatField()),
                ('day', models.FloatField()),
                ('month', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Alarm_config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('low_alarm', models.PositiveSmallIntegerField(default=1000)),
                ('low_warning', models.PositiveSmallIntegerField(default=2000)),
                ('high_warning', models.PositiveSmallIntegerField(default=3000)),
                ('high_alarm', models.PositiveSmallIntegerField(default=4000)),
                ('device_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rest_api.device')),
            ],
        ),
    ]
